/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package snake.ladder;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author apiiit-rkv
 */
public class Snakeboard extends javax.swing.JFrame {

    /**
     * Creates new form Snakeboard
     */
    int counter=0;
    Timer timer;
    
    public Snakeboard() {
        initComponents();
        this.setLocationRelativeTo(null);
        // timer
        
        time();
    }
    public int counter1;
    public int total2=0,stot2=0;
    public int total1=0,stot1=0;
    public static int ran1,ran2,x=-200,y=-300,x1=-400,y1=-300;
    public static int bcount1=0,bcount2=0,lad1=0,lad2=0;
    
    
    //Timer class
    public void time()
    {
       
        counter=0;
        TimeClass tc= new TimeClass(counter);
                timer = new Timer(10, tc);
                timer.start();
    }
     public class TimeClass implements ActionListener{
        int counter;
        
        public TimeClass(int counter)
        {
            this.counter= counter;
        }

        
        @Override
        public void actionPerformed(ActionEvent tc){
            counter++;
            
            if(counter>=1 && counter<=1300)
            {
                //timerLabel.setText("TimeProgress left: "+counter);
                timer.stop();
                flash.setLocation(counter,20);
                timer.start();
                
                
            }
            else{
                timer.stop();
                 flash.setIcon(new ImageIcon(getClass().getResource("free.png")));
            }
        }
    }
    //Timer class
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p4 = new javax.swing.JLabel();
        flash = new javax.swing.JLabel();
        man = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        cframe = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        cframe1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cur2 = new javax.swing.JLabel();
        captain = new javax.swing.JLabel();
        pb2 = new javax.swing.JProgressBar();
        pb1 = new javax.swing.JProgressBar();
        pname1 = new javax.swing.JLabel();
        byte2 = new javax.swing.JLabel();
        byte1 = new javax.swing.JLabel();
        cur1 = new javax.swing.JLabel();
        pname2 = new javax.swing.JLabel();
        p9 = new javax.swing.JLabel();
        bird = new javax.swing.JLabel();
        ladder1 = new javax.swing.JLabel();
        ladder2 = new javax.swing.JLabel();
        underline = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        p4.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        p4.setForeground(new java.awt.Color(1, 1, 1));
        p4.setText("Level Completed :");
        getContentPane().add(p4, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 510, -1, 40));

        flash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/birds.gif"))); // NOI18N
        getContentPane().add(flash, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 100));

        man.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/ironred.png"))); // NOI18N
        getContentPane().add(man, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 0, -1, 200));

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/logohome.png"))); // NOI18N
        home.setText("Player1");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, 80, 80));

        label.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMouseClicked(evt);
            }
        });
        getContentPane().add(label, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 90, 40, 60));

        cframe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/CF.png"))); // NOI18N
        cframe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cframeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cframeMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cframeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cframeMouseReleased(evt);
            }
        });
        getContentPane().add(cframe, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 70, 170, 100));

        label1.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        label1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label1MouseClicked(evt);
            }
        });
        getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 440, 30, 60));

        cframe1.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        cframe1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/CF.png"))); // NOI18N
        cframe1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cframe1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cframe1MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cframe1MouseClicked(evt);
            }
        });
        getContentPane().add(cframe1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 420, 160, 100));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/batmann.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 340, 110, 220));

        cur2.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        cur2.setForeground(new java.awt.Color(1, 1, 1));
        cur2.setText("Current Position : 0");
        getContentPane().add(cur2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 590, 230, 30));

        ironman.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/ironman.png"))); // NOI18N
        getContentPane().add(ironman, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 470, 50, 130));

        captain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/batman.png"))); // NOI18N
        getContentPane().add(captain, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 50, 140));

        pb2.setBackground(new java.awt.Color(204, 204, 255));
        pb2.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        pb2.setForeground(new java.awt.Color(55, 41, 41));
        pb2.setStringPainted(true);
        getContentPane().add(pb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 550, 240, 30));

        pb1.setBackground(new java.awt.Color(204, 204, 255));
        pb1.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        pb1.setForeground(new java.awt.Color(55, 41, 41));
        pb1.setStringPainted(true);
        getContentPane().add(pb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 200, 240, 30));

        pname1.setFont(new java.awt.Font("Gawain", 2, 24)); // NOI18N
        pname1.setForeground(new java.awt.Color(1, 1, 1));
        pname1.setText("Player1 ");
        getContentPane().add(pname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 40, 130, -1));

        byte2.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        byte2.setForeground(new java.awt.Color(102, 102, 0));
        byte2.setText("Snake Bytes : 0");
        getContentPane().add(byte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 620, 220, 30));

        byte1.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        byte1.setForeground(new java.awt.Color(153, 102, 0));
        byte1.setText("Snake Bites : 0");
        getContentPane().add(byte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 270, 240, 30));

        cur1.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        cur1.setForeground(new java.awt.Color(1, 1, 1));
        cur1.setText("Current Position : 0");
        getContentPane().add(cur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 240, 220, 30));

        pname2.setFont(new java.awt.Font("Gawain", 2, 24)); // NOI18N
        pname2.setForeground(new java.awt.Color(1, 1, 1));
        pname2.setText("Player2");
        getContentPane().add(pname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 390, 140, -1));

        p9.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        p9.setForeground(new java.awt.Color(9, 9, 9));
        p9.setText("Level Completed :");
        getContentPane().add(p9, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 160, -1, 40));
        getContentPane().add(bird, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 130, 110));

        ladder1.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        ladder1.setForeground(new java.awt.Color(1, 1, 1));
        ladder1.setText("Ladders : 0");
        getContentPane().add(ladder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 300, 160, 30));

        ladder2.setFont(new java.awt.Font("Final Frontier", 3, 20)); // NOI18N
        ladder2.setForeground(new java.awt.Color(1, 1, 1));
        ladder2.setText("Ladders : 0");
        getContentPane().add(ladder2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 650, 160, 30));

        underline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/under.png"))); // NOI18N
        getContentPane().add(underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 300, 290, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snake/ladder/snakechart.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cframeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframeMouseClicked
      
    }//GEN-LAST:event_cframeMouseClicked

    private void labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMouseClicked
       

    }//GEN-LAST:event_labelMouseClicked

    private void cframe1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframe1MouseClicked
        
    }//GEN-LAST:event_cframe1MouseClicked

    private void label1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label1MouseClicked
        

    }//GEN-LAST:event_label1MouseClicked

    private void cframeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframeMouseEntered
     
    }//GEN-LAST:event_cframeMouseEntered

    private void cframeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframeMousePressed
         // pressed counter 
        label.setIcon(new ImageIcon(getClass().getResource("trans.png")));
        cframe.setIcon(new ImageIcon(getClass().getResource("counter.gif")));
        
    }//GEN-LAST:event_cframeMousePressed

    private void cframe1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframe1MousePressed
         label1.setIcon(new ImageIcon(getClass().getResource("trans.png")));
        cframe1.setIcon(new ImageIcon(getClass().getResource("counter.gif")));
        
            
    }//GEN-LAST:event_cframe1MousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      captain.setLocation(x1,y1);
      ironman.setLocation(x,y);
    }//GEN-LAST:event_formWindowActivated

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
       //no
    }//GEN-LAST:event_formPropertyChange

    private void cframeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframeMouseReleased
       // for counter one
        cframe.setIcon(new ImageIcon(getClass().getResource("CF.png")));
        int g=0,w=0;
        turns obj= new turns();
        ran1 = random1();
        while(ran1==0)
        {
            ran1= random1();
        }
        stot1=stot1+ran1;
        if(ran1==1)
           label.setIcon(new ImageIcon(getClass().getResource("1.jpg")));
        else if(ran1==2)
            label.setIcon(new ImageIcon(getClass().getResource("2.jpg")));
        else if(ran1==3)
            label.setIcon(new ImageIcon(getClass().getResource("3.jpg")));
        else if(ran1==4)
            label.setIcon(new ImageIcon(getClass().getResource("4.jpg")));
        else if(ran1==5)
            label.setIcon(new ImageIcon(getClass().getResource("5.jpg")));
        else if(ran1==6)
            label.setIcon(new ImageIcon(getClass().getResource("6.jpg")));
        //for ladder
        //JOptionPane.showMessageDialog(this,"S-total: "+stot1);
         if(stot1<=50)
         {
            snakebite snake= new snakebite();
            ladderclimb ladder= new ladderclimb();
            total1= total1+ran1;
            if(total1==10 || total1==11 || total1==9)
            {
                total1=total1+14;
                stot1=stot1+14;
                lad1++;
                g=1;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                ladder.label.setText(pname1.getText()+" climb the Ladder");
            }
            if(total1==19)
            {
                g=1;
                total1=total1+20;
                stot1=stot1+20;
                lad1++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                ladder.label.setText(pname1.getText()+" climb the Ladder");
            }
            if(total1==31)
            {
                g=1;
                total1=total1+18;
                stot1=stot1+18;
                lad1++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                ladder.label.setText(pname1.getText()+" climb the Ladder");
            }
            if(total1==35)
            {
                g=1;
                total1=total1+10;
                stot1=stot1+10;
                lad1++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                ladder.label.setText(pname1.getText()+" climb the Ladder");
            }
             // for snake byte
            if(total1==21)
            {
                g=1;
                total1=total1-8;
                stot1=stot1-8;
                bcount1++;  
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                snake.label.setText(pname1.getText()+" Bite by the Snake");
            }
            if(total1==29)
            {
                g=1;
                total1=total1-24;
                stot1=stot1-24;
                bcount1++;  
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                snake.label.setText(pname1.getText()+" Bite by the Snake");
            }
            if(total1==42)
            {
                g=1;
                total1=total1-17;
                stot1=stot1-17;
                bcount1++;  
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                snake.label.setText(pname1.getText()+" Bite by the Snake");
            }
            if(total1==47)
            {
                g=1;
                total1=total1-13;
                stot1=stot1-13;
                bcount1++;
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
                snake.label.setText(pname1.getText()+" Bite by the Snake");
            }
            
            // for position setting ,ladder count , bytes count and progress bar status
            byte1.setText("Snake Bites : "+bcount1);
            ladder1.setText("Ladders : "+lad1);
            pb1.setValue(total1*2);
            cur1.setText("Current Position: "+total1);
            setposition1(total1);
         // JOptionPane.showMessageDialog(null, new JLabel("<html><h3><font color='white'>Now Player-2 Turn !!!!</font></h3></html>"), "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            if(total1==50)
            {
                w=1;
                win obj1 = new win();
                obj1.setVisible(true);
                obj1.setLocationRelativeTo(null);
                obj1.man.setIcon(new ImageIcon(getClass().getResource("ironred.png")));
                obj1.label.setText(pname1.getText());
            }
            if(g!=1 && w!=1)
            {
                obj.setVisible(true);
                obj.setLocationRelativeTo(null);
                obj.turn.setText("Now, "+pname2.getText()+" Turn!!!");
            }
            g=0;
            w=0;
            ironman.setIcon(new ImageIcon(getClass().getResource("ironman.png")));
            ironman.setLocation(x,y);
            
            
         } 
         else
         {
            int num = stot1-50;
            int need= ran1-num;
            stot1=stot1-ran1;
            //JOptionPane.showMessageDialog(this,"You reach the goal with number: "+need);
            obj.setVisible(true);
            obj.setLocationRelativeTo(null);
             obj.turn.setText("You need lessthan : "+need);
         }
    }//GEN-LAST:event_cframeMouseReleased

    private void cframe1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cframe1MouseReleased
       turns obj= new turns();
       int g=0,w=0;
         cframe1.setIcon(new ImageIcon(getClass().getResource("CF.png")));
        int check=total2;
        ran2 = random1();
        while(ran2==0)
        {
            ran2= random2();        
        }
        stot2=stot2+ran2;
        if(ran2==1)
           label1.setIcon(new ImageIcon(getClass().getResource("1.jpg")));
        else if(ran2==2)
            label1.setIcon(new ImageIcon(getClass().getResource("2.jpg")));
        else if(ran2==3)
            label1.setIcon(new ImageIcon(getClass().getResource("3.jpg")));
        else if(ran2==4)
            label1.setIcon(new ImageIcon(getClass().getResource("4.jpg")));
        else if(ran2==5)
            label1.setIcon(new ImageIcon(getClass().getResource("5.jpg")));
        else if(ran2==6)
            label1.setIcon(new ImageIcon(getClass().getResource("6.jpg")));
        //for progress bar and position moving place
         if(stot2<=50)
         {
            snakebite snake= new snakebite();
            ladderclimb ladder= new ladderclimb();
            total2= total2+ran2;
            //for ladders jumping
            if(total2==10)
            {
                g=1;
                total2=total2+14;
                stot2=stot2+14;
                lad2++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
                ladder.label.setText(pname2.getText()+" climb the Ladder");
            }
            if(total2==19)
            {
                g=1;
                total2=total2+20;
                stot2=stot2+20;
                lad2++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
               ladder.label.setText(pname2.getText()+" climb the Ladder");
            }
            if(total2==31)
            {
                g=1;
                total2=total2+18;
                stot2=stot2+18;
                lad2++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
               ladder.label.setText(pname2.getText()+" climb the Ladder");
            }
            if(total2==35)
            {
                g=1;
                total2=total2+10;
                stot2=stot2+10;
                lad2++;
                ladder.setVisible(true);
                ladder.setLocationRelativeTo(null);
                ladder.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
               ladder.label.setText(pname2.getText()+" climb the Ladder");
            }
            // for snake byte
            if(total2==21)
            {
                g=1;
                total2=total2-8;
                stot2=stot2-8;
                bcount2++;
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
                snake.label.setText(pname2.getText()+" bite by the Snake");
            }
            if(total2==29)
            {
                g=1;
                total2=total2-24;
                stot2=stot2-24;
                bcount2++;
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
                snake.label.setText(pname2.getText()+" bite by the Snake");
            }
            if(total2==42)
            {
                g=1;
                total2=total2-17;
                stot2=stot2-17;
                bcount2++;
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
                snake.label.setText(pname2.getText()+" bite by the Snake");
            }
            if(total2==47)
            {
                g=1;
                total2=total2-13;
                stot2=stot2-13;
                bcount2++;
                snake.setVisible(true);
                snake.setLocationRelativeTo(null);
                snake.man.setIcon(new ImageIcon(getClass().getResource("batman.png")));
                snake.label.setText(pname2.getText()+" bite by the Snake");
            }
            // for position, snake byte, ladder count and progress bar status
            byte2.setText("Snake Bites : "+bcount2);
            ladder2.setText("Ladders : "+lad2);
            cur2.setText("Current Position: "+total2);
            pb2.setValue(total2*2); //progrss bar status
            setposition2(total2); // for position setting
             //JOptionPane.showMessageDialog(null, new JLabel("<html><h3><font color='white'>Now Player-1 Turn !!!!</font></h3></html>"), "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            if(total2==50)
            {
                w=1;
                win obj1 = new win();
                obj1.setVisible(true);
                obj1.setLocationRelativeTo(null);
                obj1.man.setIcon(new ImageIcon(getClass().getResource("batmann.png")));
                obj1.label.setText(pname2.getText());
            }
            if(g!=1 && w!=1)
            {
                obj.setVisible(true);
                obj.setLocationRelativeTo(null);
                obj.turn.setText("Now, "+pname1.getText()+" Turn!!!");
            }
            g=0;
            w=0;
            captain.setIcon(new ImageIcon(getClass().getResource("batman.png")));
           captain.setLocation(x1,y1);
           
         } 
         else
         {
            int num = stot2-50;
            int need= ran2-num;
            stot2=stot2-ran2;
            //JOptionPane.showMessageDialog(this,"You need lessthan : "+need);
            obj.setVisible(true);
            obj.setLocationRelativeTo(null);
            obj.turn.setText("You ness lessthan : "+need);
         }
    }//GEN-LAST:event_cframe1MouseReleased

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        Home obj= new Home();
        this.setVisible(false);
        obj.setVisible(true);
        obj.setLocationRelativeTo(null);
    }//GEN-LAST:event_homeMouseClicked
    public int random1()
    {
        Random ran= new Random();
        ran1 = ran.nextInt(7);
        return ran1;
    }
    public int random2()
    {
        Random ran= new Random();
        ran2 = ran.nextInt(7);
        return ran2;
    }
    // Ironman or player1 positions
    public void setposition1(int m)
    {
        int n=m;
        if(n==1)
        {
            x=330;y=490;
        }
        if(n==2)
        {
            x=260;y=510;
        }
        if(n==3)
        {
            x=200;y=510;
        }
        if(n==4)
        {
            x=140;y=480;
        }
        if(n==5)
        {
            x=140;y=420;
        }
        if(n==6)
        {
            x=210;y=390;
        }
        if(n==7)
        {
            x=270;y=380;
        }
        if(n==8)
        {
            x=330;y=380;
        }
        if(n==9)
        {
            x=390;y=390;
        }
        if(n==10)
        {
            x=460;y=400;
        }
        if(n==11)
        {
            x=520;y=410;
        }
        if(n==12)
        {
            x=580;y=410;
        }
        if(n==13)
        {
            x=650;y=420;
        }
        if(n==14)
        {
            x=700;y=420;
        }
        if(n==15)
        {
            x=770;y=410;
        }
        if(n==16)
        {
            x=840;y=380;
        }
        if(n==17)
        {
            x=870;y=330;
        }
        if(n==18)
        {
            x=840;y=270;
        }
        if(n==19)
        {
            x=780;y=250;
        }
        if(n==20)
        {
            x=730;y=230;
        }
        if(n==21)
        {
            x=660;y=230;
        }
        if(n==22)
        {
            x=590;y=230;
        }
        if(n==23)
        {
            x=530;y=230;
        }
        if(n==24)
        {
            x=470;y=230;
        }
        if(n==25)
        {
            x=410;y=240;
        }
        if(n==26)
        {
            x=360;y=210;
        }
        if(n==27)
        {
            x=290;y=180;
        }
        if(n==28)
        {
            x=230;y=190;
        }
        if(n==29)
        {
            x=190;y=170;
        }
        if(n==30)
        {
            x=230;y=120;
        }
        if(n==31)
        {
            x=310;y=120;
        }
        if(n==32)
        {
            x=380;y=130;
        }
        if(n==33)
        {
            x=430;y=130;
        }
        if(n==34)
        {
            x=490;y=140;
        }
        if(n==35)
        {
            x=550;y=150;
        }
        if(n==36)
        {
            x=610;y=160;
        }
        if(n==37)
        {
            x=670;y=160;
        }
        if(n==38)
        {
            x=720;y=150;
        }
        if(n==39)
        {
            x=770;y=130;
        }
        if(n==40)
        {
            x=810;y=90;
        }
        if(n==41)
        {
            x=800;y=40;
        }
        if(n==42)
        {
            x=770;y=0;
        }
        if(n==43)
        {
            x=700;y=10;
        }
        if(n==44)
        {
            x=630;y=0;
        }
        if(n==45)
        {
            x=550;y=0;
        }
        if(n==46)
        {
            x=480;y=10;
        }
        if(n==47)
        {
            x=400;y=10;
        }
        if(n==48)
        {
            x=330;y=10;
        }
        if(n==49)
        {
            x=270;y=10;
        }
        if(n==50)
        {
            x=200;y=30;
        }
     
       
    }
     public void setposition2(int m)
    {
        int n=m;
        if(n==1)
        {
            x1=330;y1=490;
        }
        if(n==2)
        {
            x1=260;y1=510;
        }
        if(n==3)
        {
            x1=200;y1=510;
        }
        if(n==4)
        {
            x1=140;y1=480;
        }
        if(n==5)
        {
            x1=140;y1=420;
        }
        if(n==6)
        {
            x1=210;y1=390;
        }
        if(n==7)
        {
            x1=270;y1=380;
        }
        if(n==8)
        {
            x1=330;y1=380;
        }
        if(n==9)
        {
            x1=390;y1=390;
        }
        if(n==10)
        {
            x1=460;y1=400;
        }
        if(n==11)
        {
            x1=520;y1=410;
        }
        if(n==12)
        {
            x1=580;y1=410;
        }
        if(n==13)
        {
            x1=650;y1=420;
        }
        if(n==14)
        {
            x1=700;y1=420;
        }
        if(n==15)
        {
            x1=770;y1=410;
        }
        if(n==16)
        {
            x1=840;y1=380;
        }
        if(n==17)
        {
            x1=870;y1=330;
        }
        if(n==18)
        {
            x1=840;y1=270;
        }
        if(n==19)
        {
            x1=780;y1=250;
        }
        if(n==20)
        {
            x1=730;y1=230;
        }
        if(n==21)
        {
            x1=660;y1=230;
        }
        if(n==22)
        {
            x1=590;y1=230;
        }
        if(n==23)
        {
            x1=530;y1=230;
        }
        if(n==24)
        {
            x1=470;y1=230;
        }
        if(n==25)
        {
            x1=410;y1=240;
        }
        if(n==26)
        {
            x1=360;y1=210;
        }
        if(n==27)
        {
            x1=290;y1=180;
        }
        if(n==28)
        {
            x1=230;y1=190;
        }
        if(n==29)
        {
            x1=190;y1=170;
        }
        if(n==30)
        {
            x1=230;y1=120;
        }
        if(n==31)
        {
            x1=310;y1=120;
        }
        if(n==32)
        {
            x1=380;y1=130;
        }
        if(n==33)
        {
            x1=430;y1=130;
        }
        if(n==34)
        {
            x1=490;y1=140;
        }
        if(n==35)
        {
            x1=550;y1=150;
        }
        if(n==36)
        {
            x1=610;y1=160;
        }
        if(n==37)
        {
            x1=670;y1=160;
        }
        if(n==38)
        {
            x1=720;y1=150;
        }
        if(n==39)
        {
            x1=770;y1=130;
        }
        if(n==40)
        {
            x1=810;y1=90;
        }
        if(n==41)
        {
            x1=800;y1=40;
        }
        if(n==42)
        {
            x1=770;y1=0;
        }
        if(n==43)
        {
            x1=700;y1=10;
        }
        if(n==44)
        {
            x1=630;y1=0;
        }
        if(n==45)
        {
            x1=550;y1=0;
        }
        if(n==46)
        {
            x1=480;y1=10;
        }
        if(n==47)
        {
            x1=400;y1=10;
        }
        if(n==48)
        {
            x1=330;y1=10;
        }
        if(n==49)
        {
            x1=270;y1=10;
        }
        if(n==50)
        {
            x1=200;y1=30;
        }
    }
       
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Snakeboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Snakeboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Snakeboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Snakeboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Snakeboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bird;
    private javax.swing.JLabel byte1;
    private javax.swing.JLabel byte2;
    public static javax.swing.JLabel captain;
    private javax.swing.JLabel cframe;
    private javax.swing.JLabel cframe1;
    private javax.swing.JLabel cur1;
    private javax.swing.JLabel cur2;
    private javax.swing.JLabel flash;
    private javax.swing.JLabel home;
    protected final javax.swing.JLabel ironman = new javax.swing.JLabel();
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    static javax.swing.JLabel label;
    static javax.swing.JLabel label1;
    private javax.swing.JLabel ladder1;
    private javax.swing.JLabel ladder2;
    private javax.swing.JLabel man;
    private javax.swing.JLabel p4;
    private javax.swing.JLabel p9;
    private javax.swing.JProgressBar pb1;
    private javax.swing.JProgressBar pb2;
    public static javax.swing.JLabel pname1;
    public static javax.swing.JLabel pname2;
    private javax.swing.JLabel underline;
    // End of variables declaration//GEN-END:variables
}
